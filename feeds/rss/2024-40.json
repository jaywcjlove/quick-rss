[
  {
    "id": "39",
    "url": "https://wangchujiang.com/quick-rss/issue/39.html",
    "title": "Nginx UI：轻松管理您的 Nginx 服务器的开源网页界面",
    "content_html": "<p>Nginx UI 是一个功能强大的 Nginx 网页管理界面</p>\n<p><img src=\"https://github.com/user-attachments/assets/db83fa88-6670-4683-a7b2-3784184cd03a\" alt=\"image\"></p>\n<h3>具有以下特点：</h3>\n<ul>\n<li><strong>在线统计</strong>：实时监控服务器指标，包括 CPU 使用率、内存使用率、负载平均值和磁盘使用情况。</li>\n<li><strong>在线 ChatGPT 助手</strong>：提供即时帮助。</li>\n<li><strong>一键部署和自动续期的 Let’s Encrypt 证书</strong>：简化 SSL 证书管理。</li>\n<li><strong>在线配置编辑</strong>：使用自定义的 NgxConfigEditor（用户友好的块编辑器）或 Ace 代码编辑器（支持 Nginx 配置语法高亮）进行配置编辑。</li>\n<li><strong>在线查看 Nginx 日志</strong>：便于监控和调试。</li>\n<li><strong>轻量级架构</strong>：使用 Go 和 Vue 编写，分发为单个可执行二进制文件。</li>\n<li><strong>自动测试配置文件</strong>：在保存配置后自动重新加载 Nginx。</li>\n<li><strong>Web 终端</strong>：提供命令行界面。</li>\n<li><strong>暗模式和响应式设计</strong>：适配各种设备。</li>\n</ul>\n<h3>国际化支持</h3>\n<p>Nginx UI 支持多种语言，包括：</p>\n<ul>\n<li>英语</li>\n<li>简体中文</li>\n<li>繁体中文</li>\n</ul>\n<h3>使用说明</h3>\n<p>在首次运行 Nginx UI 时，请访问 <code>http://&#x3C;your_server_ip>:&#x3C;listen_port></code> 进行后续配置。可以通过终端运行 Nginx UI，支持在后台运行以及通过 systemd 管理服务。</p>\n<h3>安装平台</h3>\n<p>Nginx UI 支持以下平台：</p>\n<ul>\n<li>macOS 11 Big Sur 及更高版本（amd64 / arm64）</li>\n<li>Linux 2.6.23 及更高版本（x86 / amd64 / arm64 / armv5 / armv6 / armv7）</li>\n<li>FreeBSD、OpenBSD、Dragonfly BSD、Openwrt 等</li>\n</ul>\n<p>您可以访问最新发布页面下载最新版本或使用 Linux 安装脚本。</p>\n<h3>使用 Docker 部署</h3>\n<p>我们的 Docker 镜像 <code>uozi/nginx-ui:latest</code> 基于最新的 Nginx 镜像，可以用来替换主机上的 Nginx。通过将容器的 80 和 443 端口发布到主机，您可以轻松切换。</p>\n<p><strong>注意</strong>：</p>\n<ul>\n<li>使用该容器时，请确保映射到 <code>/etc/nginx</code> 的卷为空。</li>\n<li>如果您希望托管静态文件，可以映射目录到容器。</li>\n</ul>\n<p><strong>部署步骤</strong>：</p>\n<ol>\n<li>\n<p>安装 Docker。</p>\n</li>\n<li>\n<p>然后使用以下命令部署 Nginx UI：</p>\n<pre class=\"language-bash\"><code class=\"language-bash code-highlight\"><span class=\"code-line line-number\" line=\"1\"><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-dit</span> <span class=\"token punctuation\">\\</span>\r\n</span><span class=\"code-line line-number\" line=\"2\">  <span class=\"token parameter variable\">--name</span><span class=\"token operator\">=</span>nginx-ui <span class=\"token punctuation\">\\</span>\r\n</span><span class=\"code-line line-number\" line=\"3\">  <span class=\"token parameter variable\">--restart</span><span class=\"token operator\">=</span>always <span class=\"token punctuation\">\\</span>\r\n</span><span class=\"code-line line-number\" line=\"4\">  <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">TZ</span><span class=\"token operator\">=</span>Asia/Shanghai <span class=\"token punctuation\">\\</span>\r\n</span><span class=\"code-line line-number\" line=\"5\">  <span class=\"token parameter variable\">-v</span> /mnt/user/appdata/nginx:/etc/nginx <span class=\"token punctuation\">\\</span>\r\n</span><span class=\"code-line line-number\" line=\"6\">  <span class=\"token parameter variable\">-v</span> /mnt/user/appdata/nginx-ui:/etc/nginx-ui <span class=\"token punctuation\">\\</span>\r\n</span><span class=\"code-line line-number\" line=\"7\">  <span class=\"token parameter variable\">-p</span> <span class=\"token number\">8080</span>:80 <span class=\"token parameter variable\">-p</span> <span class=\"token number\">8443</span>:443 <span class=\"token punctuation\">\\</span>\r\n</span><span class=\"code-line line-number\" line=\"8\">  uozi/nginx-ui:latest\n</span></code></pre>\n</li>\n<li>\n<p>当您的 Docker 容器运行时，通过 <code>http://&#x3C;your_server_ip>:8080/install</code> 登录 Nginx UI 面板。</p>\n</li>\n</ol>\n<p>Nginx UI 使得 Nginx 的管理变得更加简单和直观，非常适合需要监控和配置 Nginx 的用户。</p>",
    "summary": "Nginx UI 是一个功能强大的 Nginx 网页管理界面 ### 具有以下特点： - **在线统计**：实时监控服务器指标，包括 CPU 使用率、内存使用率、负载平均值和磁盘使用情况。 - **在线 ChatGPT 助手**：提供即时帮助。 - **一键部署和自动续期的 Let’s Encrypt 证书**：简化 SSL 证书管理。 - **在线配置编辑**：使用自定义的 NgxConfigE",
    "banner_image": "https://github.com/user-attachments/assets/db83fa88-6670-4683-a7b2-3784184cd03a",
    "date_published": "2024-10-03T05:57:31Z",
    "author": {
      "name": "jaywcjlove",
      "link": "https://avatars.githubusercontent.com/u/1680273?v=4"
    },
    "markdownContent": "Nginx UI 是一个功能强大的 Nginx 网页管理界面\r\n\r\n![image](https://github.com/user-attachments/assets/db83fa88-6670-4683-a7b2-3784184cd03a)\r\n\r\n\r\n### 具有以下特点：\r\n\r\n- **在线统计**：实时监控服务器指标，包括 CPU 使用率、内存使用率、负载平均值和磁盘使用情况。\r\n- **在线 ChatGPT 助手**：提供即时帮助。\r\n- **一键部署和自动续期的 Let’s Encrypt 证书**：简化 SSL 证书管理。\r\n- **在线配置编辑**：使用自定义的 NgxConfigEditor（用户友好的块编辑器）或 Ace 代码编辑器（支持 Nginx 配置语法高亮）进行配置编辑。\r\n- **在线查看 Nginx 日志**：便于监控和调试。\r\n- **轻量级架构**：使用 Go 和 Vue 编写，分发为单个可执行二进制文件。\r\n- **自动测试配置文件**：在保存配置后自动重新加载 Nginx。\r\n- **Web 终端**：提供命令行界面。\r\n- **暗模式和响应式设计**：适配各种设备。\r\n\r\n### 国际化支持\r\n\r\nNginx UI 支持多种语言，包括：\r\n\r\n- 英语\r\n- 简体中文\r\n- 繁体中文\r\n\r\n### 使用说明\r\n\r\n在首次运行 Nginx UI 时，请访问 `http://<your_server_ip>:<listen_port>` 进行后续配置。可以通过终端运行 Nginx UI，支持在后台运行以及通过 systemd 管理服务。\r\n\r\n### 安装平台\r\n\r\nNginx UI 支持以下平台：\r\n\r\n- macOS 11 Big Sur 及更高版本（amd64 / arm64）\r\n- Linux 2.6.23 及更高版本（x86 / amd64 / arm64 / armv5 / armv6 / armv7）\r\n- FreeBSD、OpenBSD、Dragonfly BSD、Openwrt 等\r\n\r\n您可以访问最新发布页面下载最新版本或使用 Linux 安装脚本。\r\n\r\n\r\n### 使用 Docker 部署\r\n\r\n我们的 Docker 镜像 `uozi/nginx-ui:latest` 基于最新的 Nginx 镜像，可以用来替换主机上的 Nginx。通过将容器的 80 和 443 端口发布到主机，您可以轻松切换。\r\n\r\n**注意**：\r\n- 使用该容器时，请确保映射到 `/etc/nginx` 的卷为空。\r\n- 如果您希望托管静态文件，可以映射目录到容器。\r\n\r\n**部署步骤**：\r\n\r\n1. 安装 Docker。\r\n2. 然后使用以下命令部署 Nginx UI：\r\n\r\n   ```bash\r\n   docker run -dit \\\r\n     --name=nginx-ui \\\r\n     --restart=always \\\r\n     -e TZ=Asia/Shanghai \\\r\n     -v /mnt/user/appdata/nginx:/etc/nginx \\\r\n     -v /mnt/user/appdata/nginx-ui:/etc/nginx-ui \\\r\n     -p 8080:80 -p 8443:443 \\\r\n     uozi/nginx-ui:latest\r\n   ```\r\n\r\n3. 当您的 Docker 容器运行时，通过 `http://<your_server_ip>:8080/install` 登录 Nginx UI 面板。\r\n\r\n\r\nNginx UI 使得 Nginx 的管理变得更加简单和直观，非常适合需要监控和配置 Nginx 的用户。"
  },
  {
    "id": "38",
    "url": "https://wangchujiang.com/quick-rss/issue/38.html",
    "title": "轻松释放存储空间：使用 NPKILL 一键清理过时的 node_modules 文件夹",
    "content_html": "<p>NPKILL 是一个非常实用的命令行工具，专门帮助开发者清理系统中的 <code>node_modules</code> 目录，从而释放大量空间。如果你经常在本地运行 Node.js 项目，你可能已经注意到这些 <code>node_modules</code> 文件夹会随着时间堆积，浪费了大量的存储空间。NPKILL 解决了这个问题，让你轻松找到并删除不再需要的 <code>node_modules</code> 文件夹。</p>\n<p><img src=\"https://github.com/user-attachments/assets/41b0ea83-c684-4be4-9798-3b7476c630a5\" alt=\"image\"></p>\n<video muted controls style=\"max-height:640px;\" src=\"https://github.com/user-attachments/assets/bfd81005-fe4a-4341-9ab7-3a489c98aa4c?rehype=video\"></video>\n<h3>工具亮点：</h3>\n<ol>\n<li><strong>释放空间</strong>：NPKILL 能够列出你系统中的所有 <code>node_modules</code> 文件夹，显示它们占用的空间，并让你选择删除，从而清理系统中的垃圾文件。</li>\n<li><strong>高效快速</strong>：NPKILL 是用 TypeScript 编写的，搜索速度极快，优化了性能，让清理工作变得更为轻松。</li>\n<li><strong>简易操作</strong>：只需简单几个按键即可删除文件夹。通过上下箭头移动选择，按 <code>Space</code> 或 <code>Del</code> 键删除选中的 <code>node_modules</code>，使用体验非常顺畅。</li>\n<li><strong>多样化功能</strong>：NPKILL 支持按路径或大小排序，支持从指定目录开始扫描，还可以通过参数过滤不需要删除的文件夹。</li>\n</ol>\n<h3>安装与使用：</h3>\n<p>你可以直接通过 <code>npx</code> 命令使用 NPKILL，甚至无需安装：</p>\n<pre class=\"language-bash\"><code class=\"language-bash code-highlight\"><span class=\"code-line line-number\" line=\"1\">npx npkill\n</span></code></pre>\n<p>当然，如果你更喜欢全局安装，也可以使用以下命令：</p>\n<pre class=\"language-bash\"><code class=\"language-bash code-highlight\"><span class=\"code-line line-number\" line=\"1\"><span class=\"token function\">npm</span> i <span class=\"token parameter variable\">-g</span> npkill\n</span></code></pre>\n<h3>操作指南：</h3>\n<p>运行命令后，NPKILL 会开始扫描当前目录中的 <code>node_modules</code> 文件夹。你可以通过上下箭头（或者 <code>j</code> 和 <code>k</code> 键）来移动选项，按下 <code>Space</code> 或 <code>Del</code> 键来删除选中的文件夹。按下 <code>o</code> 键可以打开当前选中文件夹的目录，按 <code>Q</code> 或 <code>Ctrl + C</code> 退出程序。</p>\n<h3>注意事项：</h3>\n<p>删除某些系统中的 <code>node_modules</code> 目录可能会导致应用无法正常工作。NPKILL 会通过 ⚠️ 警示符号标记这些重要文件夹，请在删除时保持谨慎。</p>\n<h3>示例：</h3>\n<p>删除项目目录中的所有 <code>node_modules</code>：</p>\n<pre class=\"language-bash\"><code class=\"language-bash code-highlight\"><span class=\"code-line line-number\" line=\"1\">npkill <span class=\"token parameter variable\">-d</span> ~/projects\n</span></code></pre>\n<p>列出 <code>dist</code> 文件夹并显示错误信息：</p>\n<pre class=\"language-bash\"><code class=\"language-bash code-highlight\"><span class=\"code-line line-number\" line=\"1\">npkill <span class=\"token parameter variable\">--target</span> dist <span class=\"token parameter variable\">-e</span>\n</span></code></pre>\n<p>自动删除备份目录中的所有 <code>node_modules</code> 文件夹：</p>\n<pre class=\"language-bash\"><code class=\"language-bash code-highlight\"><span class=\"code-line line-number\" line=\"1\">npkill <span class=\"token parameter variable\">-d</span> ~/backups/ --delete-all\n</span></code></pre>\n<h3>未来开发计划：</h3>\n<p>NPKILL 未来还会推出更多功能，包括进一步提升性能、减少依赖、支持按使用时间筛选文件夹、展示树状目录等。</p>\n<p>如果你想让你的系统更干净、更高效，NPKILL 是一款非常值得一试的工具！</p>",
    "summary": "NPKILL 是一个非常实用的命令行工具，专门帮助开发者清理系统中的 `node_modules` 目录，从而释放大量空间。如果你经常在本地运行 Node.js 项目，你可能已经注意到这些 `node_modules` 文件夹会随着时间堆积，浪费了大量的存储空间。NPKILL 解决了这个问题，让你轻松找到并删除不再需要的 `node_modules` 文件夹。 https://github.com",
    "banner_image": "https://github.com/user-attachments/assets/41b0ea83-c684-4be4-9798-3b7476c630a5",
    "date_published": "2024-09-30T05:12:23Z",
    "author": {
      "name": "jaywcjlove",
      "link": "https://avatars.githubusercontent.com/u/1680273?v=4"
    },
    "markdownContent": "NPKILL 是一个非常实用的命令行工具，专门帮助开发者清理系统中的 `node_modules` 目录，从而释放大量空间。如果你经常在本地运行 Node.js 项目，你可能已经注意到这些 `node_modules` 文件夹会随着时间堆积，浪费了大量的存储空间。NPKILL 解决了这个问题，让你轻松找到并删除不再需要的 `node_modules` 文件夹。\r\n\r\n![image](https://github.com/user-attachments/assets/41b0ea83-c684-4be4-9798-3b7476c630a5)\r\n\r\nhttps://github.com/user-attachments/assets/bfd81005-fe4a-4341-9ab7-3a489c98aa4c?rehype=video\r\n\r\n### 工具亮点：\r\n\r\n1. **释放空间**：NPKILL 能够列出你系统中的所有 `node_modules` 文件夹，显示它们占用的空间，并让你选择删除，从而清理系统中的垃圾文件。\r\n2. **高效快速**：NPKILL 是用 TypeScript 编写的，搜索速度极快，优化了性能，让清理工作变得更为轻松。\r\n3. **简易操作**：只需简单几个按键即可删除文件夹。通过上下箭头移动选择，按 `Space` 或 `Del` 键删除选中的 `node_modules`，使用体验非常顺畅。\r\n4. **多样化功能**：NPKILL 支持按路径或大小排序，支持从指定目录开始扫描，还可以通过参数过滤不需要删除的文件夹。\r\n\r\n### 安装与使用：\r\n\r\n你可以直接通过 `npx` 命令使用 NPKILL，甚至无需安装：\r\n\r\n```bash\r\nnpx npkill\r\n```\r\n\r\n当然，如果你更喜欢全局安装，也可以使用以下命令：\r\n\r\n```bash\r\nnpm i -g npkill\r\n```\r\n\r\n### 操作指南：\r\n\r\n运行命令后，NPKILL 会开始扫描当前目录中的 `node_modules` 文件夹。你可以通过上下箭头（或者 `j` 和 `k` 键）来移动选项，按下 `Space` 或 `Del` 键来删除选中的文件夹。按下 `o` 键可以打开当前选中文件夹的目录，按 `Q` 或 `Ctrl + C` 退出程序。\r\n\r\n### 注意事项：\r\n\r\n删除某些系统中的 `node_modules` 目录可能会导致应用无法正常工作。NPKILL 会通过 ⚠️ 警示符号标记这些重要文件夹，请在删除时保持谨慎。\r\n\r\n### 示例：\r\n\r\n删除项目目录中的所有 `node_modules`：\r\n\r\n```bash\r\nnpkill -d ~/projects\r\n```\r\n\r\n列出 `dist` 文件夹并显示错误信息：\r\n\r\n```bash\r\nnpkill --target dist -e\r\n```\r\n\r\n自动删除备份目录中的所有 `node_modules` 文件夹：\r\n\r\n```bash\r\nnpkill -d ~/backups/ --delete-all\r\n```\r\n\r\n### 未来开发计划：\r\n\r\nNPKILL 未来还会推出更多功能，包括进一步提升性能、减少依赖、支持按使用时间筛选文件夹、展示树状目录等。\r\n\r\n如果你想让你的系统更干净、更高效，NPKILL 是一款非常值得一试的工具！"
  },
  {
    "id": "37",
    "url": "https://wangchujiang.com/quick-rss/issue/37.html",
    "title": "个性化你的 macOS Big Sur：开源替换图标项目",
    "content_html": "<p>这个开源项目为 macOS Big Sur 用户提供了替换应用图标的资源库，帮助用户自定义系统外观。项目的所有图标均符合 macOS Big Sur 的视觉风格，用户可以通过访问 macOSicons.com 查看图标库并提交自己设计的新图标。</p>\n<p><img src=\"https://github.com/user-attachments/assets/9a815389-7ef1-4fc9-acd2-09216751b179\" alt=\"image\"></p>\n<video muted controls style=\"max-height:640px;\" src=\"https://github.com/user-attachments/assets/967a3ef2-5a9e-4f4e-a760-061c04297cfa?rehype=video\"></video>\n<p>更换图标的操作也非常简单，用户只需下载所需图标，并通过 Finder 中的 “获取简介” 功能，将新的图标文件拖拽替换原有图标。项目由 <a href=\"https://x.com/elrumo\">@elrumo</a> 维护，支持社区互动和反馈。</p>\n<p><img src=\"https://github.com/user-attachments/assets/bac552fd-9b06-447c-9be4-9da1ce5ecbee\" alt=\"image\"></p>",
    "summary": "这个开源项目为 macOS Big Sur 用户提供了替换应用图标的资源库，帮助用户自定义系统外观。项目的所有图标均符合 macOS Big Sur 的视觉风格，用户可以通过访问 macOSicons.com 查看图标库并提交自己设计的新图标。 https://github.com/user-attachments/assets/967a3ef2-5a9e-4f4e-a760-061c04297c",
    "banner_image": "https://github.com/user-attachments/assets/9a815389-7ef1-4fc9-acd2-09216751b179",
    "date_published": "2024-09-29T00:24:38Z",
    "author": {
      "name": "jaywcjlove",
      "link": "https://avatars.githubusercontent.com/u/1680273?v=4"
    },
    "markdownContent": "这个开源项目为 macOS Big Sur 用户提供了替换应用图标的资源库，帮助用户自定义系统外观。项目的所有图标均符合 macOS Big Sur 的视觉风格，用户可以通过访问 macOSicons.com 查看图标库并提交自己设计的新图标。\r\n\r\n![image](https://github.com/user-attachments/assets/9a815389-7ef1-4fc9-acd2-09216751b179)\r\n\r\n\r\nhttps://github.com/user-attachments/assets/967a3ef2-5a9e-4f4e-a760-061c04297cfa?rehype=video\r\n\r\n\r\n更换图标的操作也非常简单，用户只需下载所需图标，并通过 Finder 中的 “获取简介” 功能，将新的图标文件拖拽替换原有图标。项目由 [@elrumo](https://x.com/elrumo) 维护，支持社区互动和反馈。\r\n\r\n![image](https://github.com/user-attachments/assets/bac552fd-9b06-447c-9be4-9da1ce5ecbee)"
  }
]

[
  {
    "id": "154",
    "url": "https://wangchujiang.com/quick-rss/issue/154.html",
    "title": "Mousio Hint 发布，通过显示快捷键提示，帮助你用键盘快速定位鼠标指针，显著提升操作效率",
    "content_html": "<p>Mousio Hint 是一款辅助增强工具，它与主应用 <a href=\"https://apps.apple.com/app/Mousio/6746747327\">Mousio</a> 协同工作，旨在<strong>通过键盘大幅提升您的系统操作效率</strong>。</p>\n<p><img src=\"https://github.com/user-attachments/assets/a5392a69-611f-4925-a412-ce6d4196ba20\" alt=\"Mousio Hint\"></p>\n<p>Mousio Hint 的核心功能是在屏幕上的界面元素旁生成<strong>快捷键提示</strong>。通过这些提示，您可以用键盘快速将鼠标指针移动到目标位置，完全无需手动操作鼠标。</p>\n<p><img src=\"https://github.com/user-attachments/assets/072ffcb2-4dc8-4108-9ad8-7b2ef1faee0e\" alt=\"Mousio Hint\"></p>\n<p><a href=\"https://apps.apple.com/app/Mousio/6746747327\">Mousio</a> 主应用支持在沙盒模式下运行，但 Mousio Hint 因为需要访问并定位界面元素，所以<strong>无法在沙盒环境中正常使用</strong>。请注意，Mousio Hint 本质上是一个辅助定位工具，它通过设置与 Mousio 进行联动。</p>\n<p><img src=\"https://github.com/user-attachments/assets/eeeea670-2d91-4500-8f2d-122f77f968c0\" alt=\"Mousio Hint\"></p>\n<p>在某些应用程序中，如果系统无法完整获取所有界面元素，您可以直接使用 Mousio。在这种情况下，操作体验会更像在玩游戏，您可以<strong>精确控制鼠标光标的位置</strong>。</p>\n<p>👉 <a href=\"https://github.com/jaywcjlove/mousio-hint\">https://github.com/jaywcjlove/mousio-hint</a></p>\n<p>结合 <a href=\"https://apps.apple.com/app/Mousio/6746747327\">Mousio</a> 提供的以下强大功能：</p>\n<ul>\n<li>⌨️ 键盘滚轮控制</li>\n<li>🎯 光标精准移动</li>\n<li>🧭 网格导航与焦点定位</li>\n</ul>\n<p>您将能够实现<strong>几乎完全脱离鼠标的高效操作体验</strong>。</p>",
    "summary": "Mousio Hint 是一款辅助增强工具，它与主应用 [Mousio](https://apps.apple.com/app/Mousio/6746747327) 协同工作，旨在**通过键盘大幅提升您的系统操作效率**。 Mousio Hint 的核心功能是在屏幕上的界面元素旁生成**快捷键提示**。通过这些提示，您可以用键盘快速将鼠标指针移动到目标位置，完全无需手动操作鼠标。 [Mousio]",
    "banner_image": "https://github.com/user-attachments/assets/a5392a69-611f-4925-a412-ce6d4196ba20",
    "date_published": "2025-06-13T17:19:48Z",
    "author": {
      "name": "jaywcjlove",
      "link": "https://avatars.githubusercontent.com/u/1680273?v=4"
    },
    "markdownContent": "Mousio Hint 是一款辅助增强工具，它与主应用 [Mousio](https://apps.apple.com/app/Mousio/6746747327) 协同工作，旨在**通过键盘大幅提升您的系统操作效率**。\n\n![Mousio Hint](https://github.com/user-attachments/assets/a5392a69-611f-4925-a412-ce6d4196ba20)\n\nMousio Hint 的核心功能是在屏幕上的界面元素旁生成**快捷键提示**。通过这些提示，您可以用键盘快速将鼠标指针移动到目标位置，完全无需手动操作鼠标。\n\n![Mousio Hint](https://github.com/user-attachments/assets/072ffcb2-4dc8-4108-9ad8-7b2ef1faee0e)\n\n[Mousio](https://apps.apple.com/app/Mousio/6746747327) 主应用支持在沙盒模式下运行，但 Mousio Hint 因为需要访问并定位界面元素，所以**无法在沙盒环境中正常使用**。请注意，Mousio Hint 本质上是一个辅助定位工具，它通过设置与 Mousio 进行联动。\n\n![Mousio Hint](https://github.com/user-attachments/assets/eeeea670-2d91-4500-8f2d-122f77f968c0)\n\n在某些应用程序中，如果系统无法完整获取所有界面元素，您可以直接使用 Mousio。在这种情况下，操作体验会更像在玩游戏，您可以**精确控制鼠标光标的位置**。\n\n👉 https://github.com/jaywcjlove/mousio-hint\n\n结合 [Mousio](https://apps.apple.com/app/Mousio/6746747327) 提供的以下强大功能：\n\n- ⌨️ 键盘滚轮控制\n- 🎯 光标精准移动\n- 🧭 网格导航与焦点定位\n\n您将能够实现**几乎完全脱离鼠标的高效操作体验**。"
  },
  {
    "id": "153",
    "url": "https://wangchujiang.com/quick-rss/issue/153.html",
    "title": "国行 macOS 15.4.1 上永久启用 Apple AI，无需关闭 SIP 或运行后台服务",
    "content_html": "<p>一种在MacOS 15.4.1（目前测试15.5 beta 4/public beta3也可）上，无需长期运行后台服务，也无需长期禁用SIP，即可永久稳定开启中国销售Mac设备上Apple AI的方法。</p>\n<p><strong>2.0版本已上线，支持相册的“消除（Clean Up）”功能开启！</strong></p>\n<img width=\"1411\" alt=\"截屏2025-05-04 09 42 49\" src=\"https://github.com/user-attachments/assets/eeb7a4ef-2d6d-46d5-8305-dd2daaafcd04\">\n<p>TODO：\n目前尚不知道能否实现的功能：</p>\n<ul>\n<li>登录非AI启用区Apple ID账号（如中国区）时</li>\n<li>外置硬盘安装macOS时</li>\n<li>系统语言与Siri语言不一致时</li>\n</ul>\n<p>在<code>/private/var/db/eligibilityd/eligibility.plist</code> 这个系统文件中，有相关的代码，但目前还不知道要怎么改，才能去掉这些限制。</p>\n<p>由于本人没有相关设备/账号，欢迎你根据现有代码进行尝试，并反馈你的测试结果。</p>\n<h2>工作原理概述</h2>\n<p>该脚本的主要思想是通过以下步骤尝试绕过 Apple 对 Apple 智能的启用检查：</p>\n<ol>\n<li>下载并执行一个<a href=\"https://github.com/CatMe0w/zouxian\">外部的第三方脚本</a>，该脚本会暂时注入eligibiltyd，使其向系统数据库输出该机型支持AI的信息（具体功能请参考该脚本的源仓库）。</li>\n<li>修改 <code>/private/var/db/eligibilityd/eligibility.plist</code> 这个系统文件，特别是调整其中关于设备区域码 (OS_ELIGIBILITY_INPUT_DEVICE_REGION_CODE) 和外部启动盘 (OS_ELIGIBILITY_INPUT_EXTERNAL_BOOT_DRIVE) 的检查值，禁止系统用这些参数来作为功能开启的前提条件。</li>\n<li>通过修改文件权限和设置 <code>uchg</code> (immutable) 标记，锁定修改后的数据库文件状态。</li>\n</ol>\n<h2>前置条件</h2>\n<ol>\n<li>一台运行兼容 macOS 版本的 Mac (M1或以上CPU，macOS 15.1或以上版本)。</li>\n<li>管理员权限，因为脚本使用 <code>sudo</code> 执行特权命令。</li>\n<li><strong>登录iCloud的Apple ID不能是中国区</strong>（美区肯定没问题，其他区未知）。</li>\n<li><strong>系统地区设置为“美国”，系统语言、Siri语言均设置为<code>简体中文（普通话）/中国</code>或<code>English(USA)</code>——设置为其他不支持Apple AI的区域会导致开启失败。</strong></li>\n<li>稳定的互联网连接以下载脚本。</li>\n<li>SIP (System Integrity Protection) 已禁用。<strong>（破解完成后可重新开启，不影响AI功能）</strong></li>\n</ol>\n<h2>执行步骤</h2>\n<p>请严格按照以下步骤操作：</p>\n<h3>步骤 1: 禁用 System Integrity Protection (SIP)</h3>\n<p>如果 SIP 已经禁用，可以跳过此步骤。如果未禁用，您必须手动禁用它：</p>\n<ol>\n<li><strong>重启 Mac</strong>。</li>\n<li>在 Mac 启动时，长按开机键，直到进入 macOS 恢复模式，途中你可能需要输入几次密码。</li>\n<li>在屏幕顶部的菜单栏中，选择 <strong>实用工具 (Utilities)</strong> > <strong>终端 (Terminal)</strong>。</li>\n<li>在终端窗口中，输入以下命令并按回车：\n<pre class=\"language-bash\"><code class=\"language-bash code-highlight\"><span class=\"code-line line-number\" line=\"1\">csrutil disable\n</span></code></pre>\n</li>\n<li>按y键确认，之后您会看到一条 SIP 已禁用的消息。</li>\n<li>在终端中，输入 <code>reboot</code> 并按回车，或者从 Apple 菜单中选择 <strong>重启 (Restart)</strong> 退出恢复模式并启动 Mac。</li>\n</ol>\n<h3>步骤 2: 下载并运行脚本</h3>\n<p><strong>单命令快速执行方法:</strong></p>\n<p>如果您完全信任本脚本，可以使用以下单命令直接执行：</p>\n<p><strong>最新2.11脚本（推荐先尝试）：</strong></p>\n<pre class=\"language-bash\"><code class=\"language-bash code-highlight\"><span class=\"code-line line-number\" line=\"1\"><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-sL</span> https://raw.githubusercontent.com/kanshurichard/enableAppleAI/main/enable_ai.sh <span class=\"token operator\">|</span> <span class=\"token function\">bash</span>\n</span></code></pre>\n<p>如果本版遇到问题，请您去提Issue。同时可以尝试2.0旧版：</p>\n<pre class=\"language-bash\"><code class=\"language-bash code-highlight\"><span class=\"code-line line-number\" line=\"1\"><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-sL</span> https://raw.githubusercontent.com/kanshurichard/enableAppleAI/main/enable_ai_old.sh <span class=\"token operator\">|</span> <span class=\"token function\">bash</span>\n</span></code></pre>\n<p><strong>如果在国内访问困难，请尝试以下国内加速地址：</strong></p>\n<pre class=\"language-bash\"><code class=\"language-bash code-highlight\"><span class=\"code-line line-number\" line=\"1\"><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-sL</span> https://cdn.jsdelivr.net/gh/kanshurichard/enableAppleAI@main/enable_ai.sh <span class=\"token operator\">|</span> <span class=\"token function\">bash</span>\n</span></code></pre>\n<p><strong>手动执行脚本:</strong></p>\n<ol>\n<li>打开 <strong>终端 (Terminal)</strong> 应用程序。</li>\n<li>使用 <code>curl</code> 下载脚本文件到当前目录：\n<pre class=\"language-bash\"><code class=\"language-bash code-highlight\"><span class=\"code-line line-number\" line=\"1\"><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-O</span> https://raw.githubusercontent.com/kanshurichard/enableAppleAI/main/enable_ai.sh\n</span></code></pre>\n</li>\n<li><strong>审查脚本内容：</strong> 使用文本编辑器或命令行工具（如 <code>cat enable_ai.sh</code>）仔细阅读下载的 <code>enable_ai.sh</code> 文件，确保您理解它将执行的操作。</li>\n<li>赋予脚本执行权限：\n<pre class=\"language-bash\"><code class=\"language-bash code-highlight\"><span class=\"code-line line-number\" line=\"1\"><span class=\"token function\">chmod</span> +x enable_ai.sh\n</span></code></pre>\n</li>\n<li>执行脚本：\n<pre class=\"language-bash\"><code class=\"language-bash code-highlight\"><span class=\"code-line line-number\" line=\"1\">./enable_ai.sh\n</span></code></pre>\n</li>\n</ol>\n<h3>步骤 3: 按照脚本提示操作</h3>\n<p>脚本运行过程中会输出当前执行的步骤，并可能在某个阶段暂停，提示您去“系统设置”中检查 Apple 智能是否已经显示为开启状态。</p>\n<ul>\n<li>如果 Apple 智能已经显示，请按 Y 键继续脚本的剩余部分。</li>\n<li>如果 Apple 智能未显示为开启，请按 N 键，脚本会自动恢复所有已有的修改。之后您可以重试一次，或来这里提交Issues。</li>\n</ul>\n<h3>步骤 4: 重启并最终确认</h3>\n<p>脚本完成执行后：</p>\n<ol>\n<li><strong>重启您的 Mac。</strong></li>\n<li>重启后，再次前往 <strong>系统设置 (System Settings)</strong> > <strong>通用 (General)</strong> > <strong>Apple 智能 (Apple Intelligence)</strong> 检查功能状态。</li>\n<li>如果 Apple 智能仍为开启状态，并且您希望恢复系统的安全性，<strong>强烈建议</strong>您再次进入恢复模式，执行 <code>csrutil enable</code> 命令重新启用 SIP。</li>\n</ol>\n<h2>故障排除与反馈</h2>\n<ul>\n<li>如果脚本执行过程中遇到错误，请检查终端输出的错误信息。</li>\n<li>如果按照步骤执行后 Apple 智能未能成功启用，或者出现其他异常，您也可以在本项目的 GitHub Issues 中提交问题。</li>\n</ul>\n<h2>常见问题</h2>\n<p><strong>问：如何卸载？</strong><br>\n答：只要在关闭SIP后，重新运行一遍脚本，到了问你是否看到AI功能出现的那一步，按“N”选否，脚本就会自动解锁所有已锁定文件。再次重启电脑后，系统就会自动用原始系统文件替代修改后的文件，相当于卸载所有对系统的更改。此时可以重新开启SIP。</p>\n<p><strong>问：能否在登录国区账号为iCloud时开启AI？</strong><br>\n答：目前还不可以，但有人进行了相关尝试，并（可能）<a href=\"https://github.com/kanshurichard/enableAppleAI/issues/6\">找到了一种变通的方法</a>。</p>\n<p><strong>问：执行eligibilityd相关的注入代码时报错，怎么办？</strong><br>\n答：这个问题已有多个报告，基本都是之前运行过其他开启AI的代码，比如 <a href=\"https://github.com/Kyle-Ye/XcodeLLMEligible/\">XcodeLLMEligible</a> 。我猜测由于该项目代码会尝试用自制程序替代系统自带的eligibilityd，导致现在代码无法注入真正的eligibilityd。请尝试用各种方式卸载之前破解残留的内容，还不行的话可能只能重装系统了。</p>\n<p><strong>问：开启AI后，Siri调用的仍然是百度百科这类国内工具，ChatGPT也无法正常调用，怎么办？</strong><br>\n答：Siri并不使用机型代码，而是使用你的IP地址，判断是否调用国内服务（如百度），即使在外版机型上，也是这样的。请考虑将所有相关URL放入代理名单，如需更多帮助，可参考：<a href=\"https://nsringo.github.io%E3%80%82\">https://nsringo.github.io。</a></p>\n<p><strong>问：图乐园（Image Playground）无法创建图片的原因？</strong><br>\n答：图乐园目前不支持中文语言下创建图片，请将系统语言改为英语（美国），即可正常使用。</p>\n<p><strong>问：是否能开启繁体中文的AI？</strong><br>\n答：不可以，因为Apple到目前（2025.5）为止都没有支持繁体中文AI，因而你无法下载到相关语言文件。为开启AI，请确保系统相关语言设置为简体中文（或其他受到支持的语言）。</p>",
    "summary": "一种在MacOS 15.4.1（目前测试15.5 beta 4/public beta3也可）上，无需长期运行后台服务，也无需长期禁用SIP，即可永久稳定开启中国销售Mac设备上Apple AI的方法。 **2.0版本已上线，支持相册的“消除（Clean Up）”功能开启！** TODO： 目前尚不知道能否实现的功能： - 登录非AI启用区Apple ID账号（如中国区）时 - 外置硬盘安装mac",
    "banner_image": null,
    "date_published": "2025-06-11T02:08:23Z",
    "author": {
      "name": "jaywcjlove",
      "link": "https://avatars.githubusercontent.com/u/1680273?v=4"
    },
    "markdownContent": "一种在MacOS 15.4.1（目前测试15.5 beta 4/public beta3也可）上，无需长期运行后台服务，也无需长期禁用SIP，即可永久稳定开启中国销售Mac设备上Apple AI的方法。\n\n**2.0版本已上线，支持相册的“消除（Clean Up）”功能开启！**\n\n<img width=\"1411\" alt=\"截屏2025-05-04 09 42 49\" src=\"https://github.com/user-attachments/assets/eeb7a4ef-2d6d-46d5-8305-dd2daaafcd04\" />\n\nTODO：\n目前尚不知道能否实现的功能：\n- 登录非AI启用区Apple ID账号（如中国区）时\n- 外置硬盘安装macOS时\n- 系统语言与Siri语言不一致时\n\n在`/private/var/db/eligibilityd/eligibility.plist` 这个系统文件中，有相关的代码，但目前还不知道要怎么改，才能去掉这些限制。\n\n由于本人没有相关设备/账号，欢迎你根据现有代码进行尝试，并反馈你的测试结果。\n\n## 工作原理概述\n\n该脚本的主要思想是通过以下步骤尝试绕过 Apple 对 Apple 智能的启用检查：\n\n1.  下载并执行一个[外部的第三方脚本](https://github.com/CatMe0w/zouxian)，该脚本会暂时注入eligibiltyd，使其向系统数据库输出该机型支持AI的信息（具体功能请参考该脚本的源仓库）。\n2.  修改 `/private/var/db/eligibilityd/eligibility.plist` 这个系统文件，特别是调整其中关于设备区域码 (OS_ELIGIBILITY_INPUT_DEVICE_REGION_CODE) 和外部启动盘 (OS_ELIGIBILITY_INPUT_EXTERNAL_BOOT_DRIVE) 的检查值，禁止系统用这些参数来作为功能开启的前提条件。\n3.  通过修改文件权限和设置 `uchg` (immutable) 标记，锁定修改后的数据库文件状态。\n\n## 前置条件\n\n1.  一台运行兼容 macOS 版本的 Mac (M1或以上CPU，macOS 15.1或以上版本)。\n2.  管理员权限，因为脚本使用 `sudo` 执行特权命令。\n3.  **登录iCloud的Apple ID不能是中国区**（美区肯定没问题，其他区未知）。\n4.  **系统地区设置为“美国”，系统语言、Siri语言均设置为`简体中文（普通话）/中国`或`English(USA)`——设置为其他不支持Apple AI的区域会导致开启失败。**\n5.  稳定的互联网连接以下载脚本。\n6.  SIP (System Integrity Protection) 已禁用。**（破解完成后可重新开启，不影响AI功能）**\n\n## 执行步骤\n\n请严格按照以下步骤操作：\n\n### 步骤 1: 禁用 System Integrity Protection (SIP)\n\n如果 SIP 已经禁用，可以跳过此步骤。如果未禁用，您必须手动禁用它：\n\n1.  **重启 Mac**。\n2.  在 Mac 启动时，长按开机键，直到进入 macOS 恢复模式，途中你可能需要输入几次密码。\n3.  在屏幕顶部的菜单栏中，选择 **实用工具 (Utilities)** > **终端 (Terminal)**。\n4.  在终端窗口中，输入以下命令并按回车：\n    ```bash\n    csrutil disable\n    ```\n5.  按y键确认，之后您会看到一条 SIP 已禁用的消息。\n6.  在终端中，输入 `reboot` 并按回车，或者从 Apple 菜单中选择 **重启 (Restart)** 退出恢复模式并启动 Mac。\n\n### 步骤 2: 下载并运行脚本\n\n\n**单命令快速执行方法:**\n\n如果您完全信任本脚本，可以使用以下单命令直接执行：\n\n**最新2.11脚本（推荐先尝试）：**\n```bash\ncurl -sL https://raw.githubusercontent.com/kanshurichard/enableAppleAI/main/enable_ai.sh | bash\n```\n如果本版遇到问题，请您去提Issue。同时可以尝试2.0旧版：\n\n```bash\ncurl -sL https://raw.githubusercontent.com/kanshurichard/enableAppleAI/main/enable_ai_old.sh | bash\n```\n\n**如果在国内访问困难，请尝试以下国内加速地址：**\n\n```bash\ncurl -sL https://cdn.jsdelivr.net/gh/kanshurichard/enableAppleAI@main/enable_ai.sh | bash\n```\n\n**手动执行脚本:**\n\n1.  打开 **终端 (Terminal)** 应用程序。\n2.  使用 `curl` 下载脚本文件到当前目录：\n    ```bash\n    curl -O https://raw.githubusercontent.com/kanshurichard/enableAppleAI/main/enable_ai.sh\n    ```\n3.  **审查脚本内容：** 使用文本编辑器或命令行工具（如 `cat enable_ai.sh`）仔细阅读下载的 `enable_ai.sh` 文件，确保您理解它将执行的操作。\n4.  赋予脚本执行权限：\n    ```bash\n    chmod +x enable_ai.sh\n    ```\n5.  执行脚本：\n    ```bash\n    ./enable_ai.sh\n    ```\n\n### 步骤 3: 按照脚本提示操作\n\n脚本运行过程中会输出当前执行的步骤，并可能在某个阶段暂停，提示您去“系统设置”中检查 Apple 智能是否已经显示为开启状态。\n\n* 如果 Apple 智能已经显示，请按 Y 键继续脚本的剩余部分。\n* 如果 Apple 智能未显示为开启，请按 N 键，脚本会自动恢复所有已有的修改。之后您可以重试一次，或来这里提交Issues。\n\n### 步骤 4: 重启并最终确认\n\n脚本完成执行后：\n\n1.  **重启您的 Mac。**\n2.  重启后，再次前往 **系统设置 (System Settings)** > **通用 (General)** > **Apple 智能 (Apple Intelligence)** 检查功能状态。\n3.  如果 Apple 智能仍为开启状态，并且您希望恢复系统的安全性，**强烈建议**您再次进入恢复模式，执行 `csrutil enable` 命令重新启用 SIP。\n\n## 故障排除与反馈\n\n* 如果脚本执行过程中遇到错误，请检查终端输出的错误信息。\n* 如果按照步骤执行后 Apple 智能未能成功启用，或者出现其他异常，您也可以在本项目的 GitHub Issues 中提交问题。\n\n## 常见问题\n\n**问：如何卸载？**  \n答：只要在关闭SIP后，重新运行一遍脚本，到了问你是否看到AI功能出现的那一步，按“N”选否，脚本就会自动解锁所有已锁定文件。再次重启电脑后，系统就会自动用原始系统文件替代修改后的文件，相当于卸载所有对系统的更改。此时可以重新开启SIP。\n\n**问：能否在登录国区账号为iCloud时开启AI？**  \n答：目前还不可以，但有人进行了相关尝试，并（可能）[找到了一种变通的方法](https://github.com/kanshurichard/enableAppleAI/issues/6)。\n\n**问：执行eligibilityd相关的注入代码时报错，怎么办？**  \n答：这个问题已有多个报告，基本都是之前运行过其他开启AI的代码，比如 [XcodeLLMEligible](https://github.com/Kyle-Ye/XcodeLLMEligible/) 。我猜测由于该项目代码会尝试用自制程序替代系统自带的eligibilityd，导致现在代码无法注入真正的eligibilityd。请尝试用各种方式卸载之前破解残留的内容，还不行的话可能只能重装系统了。\n\n**问：开启AI后，Siri调用的仍然是百度百科这类国内工具，ChatGPT也无法正常调用，怎么办？**  \n答：Siri并不使用机型代码，而是使用你的IP地址，判断是否调用国内服务（如百度），即使在外版机型上，也是这样的。请考虑将所有相关URL放入代理名单，如需更多帮助，可参考：https://nsringo.github.io。\n\n**问：图乐园（Image Playground）无法创建图片的原因？**  \n答：图乐园目前不支持中文语言下创建图片，请将系统语言改为英语（美国），即可正常使用。\n\n**问：是否能开启繁体中文的AI？**  \n答：不可以，因为Apple到目前（2025.5）为止都没有支持繁体中文AI，因而你无法下载到相关语言文件。为开启AI，请确保系统相关语言设置为简体中文（或其他受到支持的语言）。"
  },
  {
    "id": "152",
    "url": "https://wangchujiang.com/quick-rss/issue/152.html",
    "title": "Menu Bar Search：快速搜索当前应用菜单的 Alfred 工作流",
    "content_html": "<p>Menu Bar Search 是一款 Alfred 工作流，帮助你快速搜索并访问当前前台 macOS 应用的菜单项。只需输入 m 加上关键词，例如 m new tab 或 m cw（匹配“Close Window”），支持模糊匹配及快捷键触发。</p>\n<p><img src=\"https://github.com/user-attachments/assets/205779db-215e-4e99-beef-c3df380b937b\" alt=\"Menu Bar Search1\"></p>\n<p><img src=\"https://github.com/user-attachments/assets/3f470dbb-0ae1-45cf-a390-406bbacdfa19\" alt=\"Menu Bar Search2\"></p>\n<p><img src=\"https://github.com/user-attachments/assets/31884046-07b9-4f7c-8821-f76e425d5bf6\" alt=\"Menu Bar Search3\"></p>\n<p><img src=\"https://github.com/user-attachments/assets/72a468bc-66a1-4a5b-a3ae-ef4ff789209b\" alt=\"Menu Bar Search4\"></p>",
    "summary": "Menu Bar Search 是一款 Alfred 工作流，帮助你快速搜索并访问当前前台 macOS 应用的菜单项。只需输入 m 加上关键词，例如 m new tab 或 m cw（匹配“Close Window”），支持模糊匹配及快捷键触发。",
    "banner_image": "https://github.com/user-attachments/assets/205779db-215e-4e99-beef-c3df380b937b",
    "date_published": "2025-06-09T11:27:10Z",
    "author": {
      "name": "jaywcjlove",
      "link": "https://avatars.githubusercontent.com/u/1680273?v=4"
    },
    "markdownContent": "Menu Bar Search 是一款 Alfred 工作流，帮助你快速搜索并访问当前前台 macOS 应用的菜单项。只需输入 m 加上关键词，例如 m new tab 或 m cw（匹配“Close Window”），支持模糊匹配及快捷键触发。\n\n![Menu Bar Search1](https://github.com/user-attachments/assets/205779db-215e-4e99-beef-c3df380b937b)\n\n![Menu Bar Search2](https://github.com/user-attachments/assets/3f470dbb-0ae1-45cf-a390-406bbacdfa19)\n\n![Menu Bar Search3](https://github.com/user-attachments/assets/31884046-07b9-4f7c-8821-f76e425d5bf6)\n\n![Menu Bar Search4](https://github.com/user-attachments/assets/72a468bc-66a1-4a5b-a3ae-ef4ff789209b)"
  },
  {
    "id": "151",
    "url": "https://wangchujiang.com/quick-rss/issue/151.html",
    "title": "RsyncUI – 图形化管理 rsync 的 macOS 应用",
    "content_html": "<p><img src=\"https://github.com/user-attachments/assets/1d16c028-f97d-4190-ad5b-7f23ab26ec09\" alt=\"RsyncUI\"></p>\n<p>RsyncUI 是一个基于 SwiftUI 开发的 macOS 应用，适用于 macOS Sonoma 及更高版本。它为命令行工具 rsync 提供了图形用户界面，使文件同步任务的管理和参数配置更加直观便捷。RsyncUI 本身不执行同步操作，而是通过简化 rsync 的使用流程，提高效率与易用性。</p>",
    "summary": "RsyncUI 是一个基于 SwiftUI 开发的 macOS 应用，适用于 macOS Sonoma 及更高版本。它为命令行工具 rsync 提供了图形用户界面，使文件同步任务的管理和参数配置更加直观便捷。RsyncUI 本身不执行同步操作，而是通过简化 rsync 的使用流程，提高效率与易用性。",
    "banner_image": "https://github.com/user-attachments/assets/1d16c028-f97d-4190-ad5b-7f23ab26ec09",
    "date_published": "2025-06-07T23:16:32Z",
    "author": {
      "name": "jaywcjlove",
      "link": "https://avatars.githubusercontent.com/u/1680273?v=4"
    },
    "markdownContent": "![RsyncUI](https://github.com/user-attachments/assets/1d16c028-f97d-4190-ad5b-7f23ab26ec09)\n\nRsyncUI 是一个基于 SwiftUI 开发的 macOS 应用，适用于 macOS Sonoma 及更高版本。它为命令行工具 rsync 提供了图形用户界面，使文件同步任务的管理和参数配置更加直观便捷。RsyncUI 本身不执行同步操作，而是通过简化 rsync 的使用流程，提高效率与易用性。"
  },
  {
    "id": "150",
    "url": "https://wangchujiang.com/quick-rss/issue/150.html",
    "title": "AltTab：把 Windows 风格的窗口切换带到 macOS",
    "content_html": "<p><img src=\"https://github.com/user-attachments/assets/883f4507-687c-432c-ad0b-6b33e0457ed4\" alt=\"AltTab\"></p>\n<p>AltTab 是一款为 macOS 用户打造的窗口切换工具，让你在 Mac 上也能享受如 Windows 一样直观、快捷的 <kbd>Alt</kbd> + <kbd>Tab</kbd> 体验。它支持窗口预览、图标视图、自定义快捷键等功能，极大提升多任务处理效率。对于习惯 Windows 操作方式的用户来说，这是 macOS 上必备的效率提升工具。</p>",
    "summary": "AltTab 是一款为 macOS 用户打造的窗口切换工具，让你在 Mac 上也能享受如 Windows 一样直观、快捷的 Alt + Tab 体验。它支持窗口预览、图标视图、自定义快捷键等功能，极大提升多任务处理效率。对于习惯 Windows 操作方式的用户来说，这是 macOS 上必备的效率提升工具。",
    "banner_image": "https://github.com/user-attachments/assets/883f4507-687c-432c-ad0b-6b33e0457ed4",
    "date_published": "2025-06-07T09:59:28Z",
    "author": {
      "name": "jaywcjlove",
      "link": "https://avatars.githubusercontent.com/u/1680273?v=4"
    },
    "markdownContent": "![AltTab](https://github.com/user-attachments/assets/883f4507-687c-432c-ad0b-6b33e0457ed4)\n\nAltTab 是一款为 macOS 用户打造的窗口切换工具，让你在 Mac 上也能享受如 Windows 一样直观、快捷的 <kbd>Alt</kbd> + <kbd>Tab</kbd> 体验。它支持窗口预览、图标视图、自定义快捷键等功能，极大提升多任务处理效率。对于习惯 Windows 操作方式的用户来说，这是 macOS 上必备的效率提升工具。"
  },
  {
    "id": "149",
    "url": "https://wangchujiang.com/quick-rss/issue/149.html",
    "title": "Rectangle：免费开源的 macOS 窗口管理利器",
    "content_html": "<p>Rectangle 是一款基于 Spectacle 开发的 macOS 窗口管理工具，使用 Swift 编写，轻量且高效。通过拖动窗口至屏幕边缘或角落即可实现快速贴靠，同时支持纵向显示器布局。它内建丰富的快捷键，还支持快捷键循环切换窗口尺寸，让窗口操作更便捷。</p>\n<p><img src=\"https://github.com/user-attachments/assets/cb78ae9a-c2ad-4fb6-b63e-4df21e8d4ee4\" alt=\"Rectangle\"></p>",
    "summary": "Rectangle 是一款基于 Spectacle 开发的 macOS 窗口管理工具，使用 Swift 编写，轻量且高效。通过拖动窗口至屏幕边缘或角落即可实现快速贴靠，同时支持纵向显示器布局。它内建丰富的快捷键，还支持快捷键循环切换窗口尺寸，让窗口操作更便捷。",
    "banner_image": "https://github.com/user-attachments/assets/cb78ae9a-c2ad-4fb6-b63e-4df21e8d4ee4",
    "date_published": "2025-06-07T09:33:34Z",
    "author": {
      "name": "jaywcjlove",
      "link": "https://avatars.githubusercontent.com/u/1680273?v=4"
    },
    "markdownContent": "Rectangle 是一款基于 Spectacle 开发的 macOS 窗口管理工具，使用 Swift 编写，轻量且高效。通过拖动窗口至屏幕边缘或角落即可实现快速贴靠，同时支持纵向显示器布局。它内建丰富的快捷键，还支持快捷键循环切换窗口尺寸，让窗口操作更便捷。\n\n![Rectangle](https://github.com/user-attachments/assets/cb78ae9a-c2ad-4fb6-b63e-4df21e8d4ee4)"
  }
]
